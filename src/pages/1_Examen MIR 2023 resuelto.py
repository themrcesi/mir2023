import pandas as pd
import streamlit as st
from matplotlib import pyplot as plt

DATA_FILE = 'src/data/final_results.csv'

st.sidebar.header('Examen MIR 2023 resulto')
st.sidebar.markdown("""
- [Metodolog칤a](#header_metodologia)
- [Preguntas](#header_preguntas)
- [Resultados](#header_resultados)
- [Conclusiones](#header_conclusiones)
"""
)

def write_correct_question(answers, correct, explanation):
    for i, aux_answer in enumerate(answers):
        if i+1 == correct:
            st.markdown(f'- **:green[{aux_answer}]**')
        else:
            st.markdown(f'- {aux_answer}')
    st.markdown(f'Explicaci칩n: *{explanation}*')

def write_wrong_question(answers, correct, answer, explanation):
    for i, aux_answer in enumerate(answers):
        if i+1 == correct:
            st.markdown(f'- **:green[{aux_answer}]**')
        elif i+1 == answer:
            st.markdown(f'- **:red[{aux_answer}]**')
        else:
            st.markdown(f'- {aux_answer}')
    st.markdown(f'Explicaci칩n: *{explanation}*')

@st.cache
def load_data():
    data = pd.read_csv(DATA_FILE)
    return data
data = load_data()

st.title('Examen MIR 2023 resuelto')
st.header('Metodolog칤a', anchor='header_metodologia')

st.markdown("""
Tal como se explica en la p치gina anterior, en esta simulaci칩n se eval칰an las 185 preguntas (una vez exclu칤das las 25 primeras al tratarse de preguntas basadas en im치genes) del examen MIR 2023, m치s concretamente siguiendo el orden de la [versi칩n 0](https://www.redaccionmedica.com/contenido/images/Cuaderno_2022_MEDICINA_0_C.pdf). En la medida de lo posible se ha tratado de automatizar el proceso haciendo uso del lenguaje de programaci칩n [Python](https://www.python.org/).

Los pasos que se han seguido para evaluar el examen han sido los siguientes:

1) Descargar el examen en versi칩n PDF.
2) Leer, parsear y extraer el texto de las preguntas mediante las librer칤as [re](https://docs.python.org/3/library/re.html) y [PyPDF2](https://pypi.org/project/PyPDF2/)
3) Crear el prompt a utilizar en ChatGPT.
```
<Pregunta>
1) <opci칩n 1>
2) <opci칩n 2>
3) <opci칩n 3>
4) <opci칩n 4>

Contesta con el siguiente formato: {'respuesta': '<n칰mero de la respuesta>', 'justificaci칩n': '<justificaci칩n>'}
```

De esta forma en tan solo una pregunta pudimos obtener la respuesta y la justificaci칩n de una manera muy clara y f치cil de procesar en el siguiente paso.

4) Correr cada pregunta manualmente y anotar los resultados. Se intent칩 automatizar este paso mediante varias librer칤as existentes; sin embargo, al tratarse de versiones no oficiales el funcionamiento no era correcto en algunos casos y en otros el tiempo de ejecuci칩n era demasiado largo. Debido a esto, se opt칩 por realizar el proceso a mano directamente a trav칠s de la [herramienta web](https://chat.openai.com/chat).

5) Obtener las respuestas oficiales provisionales de la [p치gina](https://fse.mscbs.gob.es/fseweb/view/public/convactual/respuestasCorrectas/respuestasCorrectasAcceso.xhtml?faces-redirect=true) del Ministerio de Sanidad.

6) Finalmente, corregir el examen en base a las respuestas obtenidas mediante ChatGPT y las respuestas oficiales.
""")

st.header('Preguntas', anchor='header_preguntas')

st.markdown('*DISCLAIMER: hay fallos l칠xicos o de ortograf칤a al haberse extra칤do las preguntas y respuestas de manera autom치tica.*')

for i, row in data.iterrows():
    correct_answer = row['correct answer']
    answer = row.answer
    evaluation = row.evaluation
    answers = [row[1], row[2], row[3], row[4]]
    justification = row['justificacion']
    justification = justification.strip('\'\"}\.') + '.'
    st.subheader(f'{i+1}) {row.question}')
    if evaluation:
        write_correct_question(answers, correct_answer, justification)
    else:
        write_wrong_question(answers, correct_answer, answer, justification)
    st.markdown('''
    <style>
    [data-testid="stMarkdownContainer"] ul{
        padding-left:20px;
    }
    </style>
    ''', unsafe_allow_html=True)

st.header('Resultados', anchor='header_resultados')

st.markdown("""
Tras evaluar las respuestas, ChatGTP consigui칩 responder de manera correcta 81 de las 185 preguntas. Por lo tanto, con un 43.78% de acierto, **ChatGPT no es capaz de aprobar el examen MIR 2023**.
""")

grouped = data.groupby('evaluation').count()
fig, ax = plt.subplots()
grouped.answer.plot.bar(ax)
ax.set_xticklabels(['Err칩neas', 'Correctas'], rotation=0)
ax.set(
    xlabel='',
    ylabel='N칰mero de preguntas',
)
st.pyplot(fig)

st.header('Conclusiones', anchor='header_conclusiones')

st.markdown("""
ChatGPT se quedar칤a a las puertas de aprobar el MIR 2023, necesitando unas 12 preguntas correctas m치s para poder aprobar. 

Sin embargo, se ha demostrado que es capaz de aprobar otros ex치menes, todos ellos en ingl칠s. Es precisamente 칠sto lo que puede hacer que el resultado de este estudio sea el que es, siendo posible que los resultados mejorasen de realizarse el examen en ingl칠s. En la siguiente p치gina se pueden encontrar varios ejemplos de ex치menes que ChatGPT s칤 ha conseguido realizar de manera satisfactoria.

Finalmente, nos surge la duda de si con otro modelo (por ejemplo, *text-davinci-003* de GPT3) ser칤a posible conseguir mejores resultados despu칠s de hacer un peque침o *finetuning* con modelos de ex치menes de a침os anteriores. Pero eso me lo guardo para el pr칩ximo cap칤tulo 游땔.
""")

